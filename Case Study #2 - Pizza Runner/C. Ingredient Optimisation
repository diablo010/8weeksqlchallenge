# 🍕 Case Study #2 Pizza Runner

## 🍝 Solution - B. Runner and Customer Experience

### What are the standard ingredients for each pizza?

````sql
select pt.topping_name
from pizza_names pn
join
pizza_recipes pr
on pn.pizza_id = pr.pizza_id
join pizza_toppings pt
on pr.topping = pt.topping_id
where pr.topping in (
	select topping
    from pizza_recipes
    group by topping
    having count(pizza_id) > 1)
group by pt.topping_name;

````

**Answer:**



### 2. What was the average time in minutes it took for each runner to arrive at the Pizza Runner HQ to pickup the order?

````sql
select r.runner_id, avg(timestampdiff(minute, c.order_time, r.pickup_time)) as avg_time_taken
from customer_orders_temp c
left join runner_orders_temp r
on c.order_id = r.order_id
where r.distance is not null
group by r.runner_id;
````

**Answer:**

<img width="235" height="98" alt="Image" src="https://github.com/user-attachments/assets/fb6e1910-d381-4f1d-af40-bbb33b04bf53" />

### 3. Is there any relationship between the number of pizzas and how long the order takes to prepare?

````sql
with prep_time_cte as (
	select c.order_id,
		count(c.order_id) as pizza_order, 
		timestampdiff(minute, min(c.order_time), max(r.pickup_time)) as prep_time
	-- full-group-by prevents due to ordertime and pickuptime
    -- so min max are used
    -- since there is only one value, it gives same value
    from customer_orders_temp c
	left join runner_orders_temp r
	on c.order_id = r.order_id
	where r.distance is not null
	group by c.order_id   -- group by cannot happen on aggregated functions
)

select pizza_order,
       avg(prep_time) as avg_prep_time
from prep_time_cte
group by pizza_order;
````

**Answer:**

<img width="236" height="95" alt="Image" src="https://github.com/user-attachments/assets/dbcef6ae-4969-401f-a0b0-f660481e9695" />

### 4. Is there any relationship between the number of pizzas and how long the order takes to prepare?

````sql
select c.customer_id, 
	   round(avg(r.distance), 2) as avg_distance
from customer_orders_temp c
left join runner_orders_temp r
on c.order_id = r.order_id
where r.distance is not null
group by c.customer_id;
````

**Answer:**

<img width="234" height="137" alt="Image" src="https://github.com/user-attachments/assets/3eed99c8-e07c-40ca-8bb1-fffe38741de4" />
